<?php

/**
 * @file
 * Hooks for the checklist entity reference.
 */

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_extra_field_info().
 */
function checklist_entity_reference_entity_extra_field_info() {
  $return = [];
  $type_fields = \Drupal::service('entity_field.manager')->getFieldMapByFieldType('entity_reference_checklist');
  foreach ($type_fields as $type => $fields) {
    foreach ($fields as $field_name => $field_detail) {
      foreach ($field_detail['bundles'] as $bundle) {
        $return[$type][$bundle]['form']['checklist_entity_reference_progress'] = [
          'label' => t('Checklist Progress'),
          'description' => t('Show the progress of the checklist embedded on the entity.'),
          'weight' => -20,
          'visible' => FALSE,
        ];
      }
    }
  }
  return $return;
}

/**
 * Implements hook_entity_prepare_form().
 */
function checklist_entity_reference_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $storage = $form_state->getStorage();
  if (empty($storage['form_display'])) {
    return;
  }
  $component = $storage['form_display']->getComponent('checklist_entity_reference_progress');
  if ($component) {
    $entity = $form_state->getFormObject()->getEntity();

    $fields = \Drupal::service('entity_field.manager')->getFieldMapByFieldType('entity_reference_checklist');
    if (!empty($fields[$entity->getEntityTypeId()])) {
      $selected = 0;
      $total = 0;
      foreach ($fields[$entity->getEntityTypeId()] as $field_name => $field_detail) {
        if ($entity->hasField($field_name)) {
          $selected += $entity->get($field_name)->count();
          $total += count($form[$field_name]['widget']['#options']);
        }
      }
      if ($total) {
        $form['checklist_entity_reference_progress'] = [
          '#theme' => 'checklist_entity_reference_progress_bar',
          '#message' => 'Checklist Progress',
          '#number_complete' => $selected,
          '#number_of_items' => $total,
          '#percent_complete' => (int)round(100 / $total * $selected),
          '#attached' => [
            'library' => [
              'checklist_entity_reference/checklist_entity_reference',
            ],
          ],
        ];
        $form['checklist_entity_reference_progress']['#weight'] = $component['weight'];
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function checklist_entity_reference_theme() {
  return [
    'checklist_entity_reference_progress_bar' => [
      'path' => drupal_get_path('module', 'checklist_entity_reference') . '/templates',
      'template' => 'checklist-entity-reference-progress-bar',
      'variables' => [
        'message' => '',
        'number_complete' => 0,
        'number_of_items' => 0,
        'percent_complete' => 0,
      ],
    ],
  ];
}